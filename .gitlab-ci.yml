stages:
  - build-image
  - push-image
  - copy
  - env-setting
  - run

variables:
  IMAGE_NAME: registry.$(echo $CI_PROJECT_URL | sed -e "s/https:\/\///g" | tr '[:upper:]' '[:lower:]')/$CI_COMMIT_BRANCH/federacion_client

build:
  stage: build-image
  script:
    - docker build -t registry.$(echo $CI_PROJECT_URL | sed -e "s/https:\/\///g" | tr '[:upper:]' '[:lower:]')/$CI_COMMIT_BRANCH/federacion_client .
    - docker tag registry.$(echo $CI_PROJECT_URL | sed -e "s/https:\/\///g" | tr '[:upper:]' '[:lower:]')/$CI_COMMIT_BRANCH/federacion_client registry.$(echo $CI_PROJECT_URL | sed -e "s/https:\/\///g" | tr '[:upper:]' '[:lower:]')/$CI_COMMIT_BRANCH/federacion_client:$CI_COMMIT_SHORT_SHA

push-to-registry:
  stage: push-image
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push registry.$(echo $CI_PROJECT_URL | sed -e "s/https:\/\///g" | tr '[:upper:]' '[:lower:]')/$CI_COMMIT_BRANCH/federacion_client && docker push registry.$(echo $CI_PROJECT_URL | sed -e "s/https:\/\///g" | tr '[:upper:]' '[:lower:]')/$CI_COMMIT_BRANCH/federacion_client:$CI_COMMIT_SHORT_SHA
    - docker logout

copy_dockercompose:
  stage: copy
  script:
    - mkdir -p /home/federacionClient/
    - cp docker-compose.yml /home/federacionClient/docker-compose.yml

create_env:
  stage: env-setting
  script:
    - rm -f /home/federacionClient/.env
    - cp .env.example /home/federacionClient/.env
#    - sed -e "s/CLIENT_IMAGE.*/CLIENT_IMAGE=registry.$(echo $CI_PROJECT_URL | sed -e "s/https:\/\///g")/$CI_COMMIT_BRANCH/federacion_client/g" /home/federacionClient/.env
    - echo "CLIENT_IMAGE=registry.$(echo $CI_PROJECT_URL | sed -e \"s/https:\/\///g\")/$CI_COMMIT_BRANCH/federacion_client" > /home/federacionClient/.env

run_client:
  stage: run
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd /home/federacionClient/ && docker-compose up -d
    - docker logout


